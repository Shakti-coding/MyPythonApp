name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 120

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Set up Java JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          build-essential git unzip openjdk-11-jdk \
          python3-pip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev \
          libtinfo5 cmake libffi-dev libssl-dev \
          ccache libsqlite3-dev libreadline-dev \
          libbz2-dev wget curl llvm gettext \
          libxml2-dev libxslt-dev libjpeg-dev \
          libfreetype6-dev python3-setuptools \
          libpng-dev

    - name: Install 32-bit libraries
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update -qq
        sudo apt-get install -y \
          libncurses5:i386 libstdc++6:i386 \
          zlib1g:i386 libc6:i386

    - name: Set environment variables
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
        echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        pip install kivy[base]==2.1.0
        pip install flask werkzeug requests

    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: buildozer-global-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}-v3

    - name: Cache Buildozer local directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: buildozer-local-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}-v3

    - name: Pre-create Android directories and accept licenses
      run: |
        mkdir -p "$HOME/.android"
        echo 'count=0' > "$HOME/.android/repositories.cfg"
        
        # Pre-accept all Android SDK licenses
        mkdir -p "$HOME/.buildozer/android/platform/android-sdk/licenses"
        echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license"
        echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-preview-license"
        echo -e "\nd975f751698a77b662f1254ddbeed3901e976f5a" > "$HOME/.buildozer/android/platform/android-sdk/licenses/intel-android-extra-license"
        echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license"

    - name: Initialize Buildozer
      run: |
        export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        export ANDROID_HOME="$HOME/.buildozer/android/platform/android-sdk"
        export ANDROID_SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
        export ANDROIDSDK="$HOME/.buildozer/android/platform/android-sdk"
        export ANDROIDNDK="$HOME/.buildozer/android/platform/android-ndk"
        export ANDROIDAPI="31"
        export ANDROIDMINAPI="21"
        export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"
        
        # Accept licenses again
        yes | buildozer android debug || buildozer android debug

    - name: List build artifacts
      if: always()
      run: |
        echo "=== Build completed, checking for APK files ==="
        find . -name "*.apk" -type f -exec ls -la {} \; || echo "No APK files found"
        echo "=== Contents of bin directory ==="
        ls -la bin/ || echo "No bin directory found"
        echo "=== Contents of .buildozer directory ==="
        find .buildozer -name "*.apk" -type f -exec ls -la {} \; || echo "No APK in .buildozer"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-apk
        path: |
          bin/*.apk
          **/*.apk
          .buildozer/**/bin/*.apk
          .buildozer/**/*.apk
        if-no-files-found: warn
        retention-days: 30

    - name: Upload build logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: buildozer-logs
        path: |
          .buildozer/
          *.log
        if-no-files-found: warn
        retention-days: 7