name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          python3 \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-wheel \
          python3-venv \
          ffmpeg \
          libssl-dev \
          libffi-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libfreetype6-dev \
          libgl1-mesa-dev \
          libgles2-mesa-dev \
          libdrm-dev \
          libxkbcommon-dev \
          libegl1-mesa-dev \
          libwayland-dev \
          libxrandr-dev \
          libxss-dev \
          libgconf-2-4 \
          libxcursor-dev \
          libxcomposite-dev \
          libasound2-dev \
          libxi-dev \
          libxtst-dev \
          zip \
          unzip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
        pip install flask werkzeug requests

    - name: Install Kivy garden webview (fallback)
      run: |
        pip install kivy_garden.webview || echo "WebView garden package not available, using fallback"

    - name: Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-global-

    - name: Cache Buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-

    - name: Set environment variables
      run: |
        echo "JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.10-7/x64" >> $GITHUB_ENV
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROIDAPI=31" >> $GITHUB_ENV
        echo "ANDROIDMINAPI=21" >> $GITHUB_ENV
        echo "ANDROIDNDK=25b" >> $GITHUB_ENV

    - name: Accept Android SDK licenses
      run: |
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Build APK with Buildozer
      run: |
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools
        buildozer android debug
      env:
        JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.10-7/x64
        ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

    - name: List build output
      run: |
        echo "Contents of bin directory:"
        ls -la bin/ || echo "No bin directory found"
        echo "Looking for APK files:"
        find . -name "*.apk" -type f || echo "No APK files found"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 30

    - name: Upload debug APK (alternative path)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-alternative
        path: .buildozer/android/platform/build-**/outputs/apk/debug/*.apk
        retention-days: 30