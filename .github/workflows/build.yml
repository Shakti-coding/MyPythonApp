name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install system dependencies
      run: |
        sudo apt-get update -q
        sudo apt-get install -y \
          build-essential \
          git \
          python3 \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-wheel \
          python3-venv \
          ffmpeg \
          libssl-dev \
          libffi-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libfreetype6-dev \
          libgl1-mesa-dev \
          libgles2-mesa-dev \
          libdrm-dev \
          libxkbcommon-dev \
          libegl1-mesa-dev \
          libwayland-dev \
          libxrandr-dev \
          libxss-dev \
          libxcursor-dev \
          libxcomposite-dev \
          libasound2-dev \
          libxi-dev \
          libxtst-dev \
          zip \
          unzip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          openjdk-17-jdk \
          ccache \
          lld \
          llvm

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install buildozer==1.5.0 cython==0.29.33
        pip install kivy[base]==2.2.0 flask werkzeug requests
        pip install yt-dlp

    - name: Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-global-

    - name: Cache Buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-

    - name: Build APK with Buildozer
      run: |
        export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
        export ANDROID_HOME="$HOME/.buildozer/android/platform/android-sdk"
        export ANDROID_SDK_ROOT="$ANDROID_HOME"  
        export ANDROIDAPI="31"
        export ANDROIDMINAPI="21"
        export ANDROIDNDK="25b"
        export PATH="$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$JAVA_HOME/bin:$PATH"
        
        # Accept Android licenses
        mkdir -p "$ANDROID_HOME/licenses"
        echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_HOME/licenses/android-sdk-license"
        echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
        echo -e "\nd975f751698a77b662f1254ddbeed3901e976f5a" > "$ANDROID_HOME/licenses/intel-android-extra-license"
        
        # Build APK
        buildozer android debug

    - name: List build output
      run: |
        echo "APK build output:"
        ls -la bin/ || echo "No bin directory found"
        find . -name "*.apk" -type f || echo "No APK files found"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 30

    - name: Upload alternative debug APK
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-alternative
        path: .buildozer/android/platform/build-**/outputs/apk/debug/*.apk
        retention-days: 30
